# Mac Wayne Crypto - Nginx Configuration
# Production server configuration for optimal performance and security

server {
    listen 80;
    listen [::]:80;
    server_name macwayneofficial.com www.macwayneofficial.com;
    
    # Force HTTPS redirect
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name macwayneofficial.com www.macwayneofficial.com;
    
    # SSL Configuration
    ssl_certificate /path/to/ssl/certificate.crt;
    ssl_certificate_key /path/to/ssl/private.key;
    ssl_certificate_key /path/to/ssl/certificate.crt;
    
    # SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Document root
    root /var/www/macwayneofficial.com/html;
    index index.html;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.macwayneofficial.com wss://ws.macwayneofficial.com https:;" always;
    
    # Remove server tokens
    server_tokens off;
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Browser Caching
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    location ~* \.(css|js)$ {
        expires 1M;
        add_header Cache-Control "public";
        access_log off;
    }
    
    location ~* \.(woff|woff2|ttf|otf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # CORS for fonts
        add_header Access-Control-Allow-Origin "*";
    }
    
    # API Proxy (if using separate API server)
    location /api/ {
        proxy_pass http://localhost:3001/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Rate limiting for API
        limit_req zone=api burst=10 nodelay;
    }
    
    # WebSocket Proxy
    location /ws/ {
        proxy_pass http://localhost:3002/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific settings
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }
    
    # Single Page Application routing
    location / {
        try_files $uri $uri/ @fallback;
    }
    
    location @fallback {
        rewrite ^.*$ /index.html last;
    }
    
    # Security: Block access to sensitive files
    location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf|config|git)$ {
        deny all;
        return 404;
    }
    
    # Security: Block access to package files
    location ~* (package\.json|package-lock\.json|yarn\.lock|composer\.json|composer\.lock)$ {
        deny all;
        return 404;
    }
    
    # Security: Block access to node_modules
    location ~ /node_modules/ {
        deny all;
        return 404;
    }
    
    # Custom Error Pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /500.html;
    
    location = /404.html {
        internal;
    }
    
    location = /500.html {
        internal;
    }
    
    # Logging
    access_log /var/log/nginx/macwayneofficial.com.access.log combined;
    error_log /var/log/nginx/macwayneofficial.com.error.log warn;
    
    # Client settings
    client_max_body_size 10M;
    client_body_buffer_size 1m;
    client_body_timeout 15;
    client_header_timeout 15;
    keepalive_timeout 15;
    send_timeout 15;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
}

# Rate Limiting Zones
http {
    # General rate limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    
    # API rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
    
    # Apply general rate limiting
    limit_req zone=general burst=20 nodelay;
}

# Additional Security Settings
http {
    # Hide Nginx version
    server_tokens off;
    
    # Prevent clickjacking
    add_header X-Frame-Options SAMEORIGIN always;
    
    # Prevent MIME type sniffing
    add_header X-Content-Type-Options nosniff always;
    
    # Enable XSS filtering
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Buffer overflow protection
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    client_max_body_size 1M;
    large_client_header_buffers 2 1k;
}

# Performance Optimizations
http {
    # Enable sendfile
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Connection settings
    keepalive_timeout 65;
    keepalive_requests 100;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Timeouts
    client_header_timeout 3m;
    client_body_timeout 3m;
    send_timeout 3m;
    
    # Open file cache
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 5;
    open_file_cache_errors off;
}

# SSL Configuration (global)
http {
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
}

# Monitoring and Health Checks
server {
    listen 8080;
    server_name localhost;
    
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}
